package com.vhouzi.abc.admin.system.mapper;

import com.vhouzi.abc.admin.system.domain.SysDictData;
import com.vhouzi.abc.admin.system.model.SysDictDataModel;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

/**
 * 字典表 数据层
 * 
 * @author yiran
 */
@Mapper
public interface SysDictDataMapper
{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_dict_data
     *
     * @mbggenerated Fri Dec 27 13:01:51 CST 2019
     */
    int deleteByPrimaryKey(Long dictCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_dict_data
     *
     * @mbggenerated Fri Dec 27 13:01:51 CST 2019
     */
    int insert(SysDictData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_dict_data
     *
     * @mbggenerated Fri Dec 27 13:01:51 CST 2019
     */
    SysDictData selectByPrimaryKey(Long dictCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_dict_data
     *
     * @mbggenerated Fri Dec 27 13:01:51 CST 2019
     */
    List<SysDictData> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_dict_data
     *
     * @mbggenerated Fri Dec 27 13:01:51 CST 2019
     */
    int updateByPrimaryKey(SysDictData record);

    /**
     * 根据条件分页查询字典数据
     * 
     * @param dictData 字典数据信息
     * @return 字典数据集合信息
     */
    public List<SysDictData> selectDictDataList(SysDictData dictData);

    /**
     * 根据字典类型查询字典数据
     * 
     * @param dictType 字典类型
     * @return 字典数据集合信息
     */
    public List<SysDictData> selectDictDataByType(String dictType);

    /**
     * 根据字典类型和字典键值查询字典数据信息
     * 
     * @param dictType 字典类型
     * @param dictValue 字典键值
     * @return 字典标签
     */
    public String selectDictLabel(@Param("dictType") String dictType, @Param("dictValue") String dictValue);

    /**
     * 根据字典数据ID查询信息
     * 
     * @param dictCode 字典数据ID
     * @return 字典数据
     */
    public SysDictData selectDictDataById(Long dictCode);

    /**
     * 查询字典数据
     * 
     * @param dictType 字典类型
     * @return 字典数据
     */
    public int countDictDataByType(String dictType);

    /**
     * 通过字典ID删除字典数据信息
     * 
     * @param dictCode 字典数据ID
     * @return 结果
     */
    public int deleteDictDataById(Long dictCode);

    /**
     * 批量删除字典数据
     * 
     * @param ids 需要删除的数据
     * @return 结果
     */
    public int deleteDictDataByIds(String[] ids);

    /**
     * 新增字典数据信息
     * 
     * @param dictData 字典数据信息
     * @return 结果
     */
    public int insertDictData(SysDictData dictData);

    /**
     * 修改字典数据信息
     * 
     * @param dictData 字典数据信息
     * @return 结果
     */
    public int updateDictData(SysDictData dictData);

    /**
     * 同步修改字典类型
     * 
     * @param oldDictType 旧字典类型
     * @param newDictType 新旧字典类型
     * @return 结果
     */
    public int updateDictDataType(@Param("oldDictType") String oldDictType, @Param("newDictType") String newDictType);

    public List<SysDictDataModel> listSelectiveModel(Map<String, Object> params);

    List<SysDictData> selectDictDataByIds(String[] dictCodes);

}
